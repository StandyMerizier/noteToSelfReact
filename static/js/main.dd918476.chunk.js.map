{"version":3,"sources":["components/Note.js","components/App.js","index.js"],"names":["Note","react_default","a","createElement","className","this","props","note","text","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","notes","setState","read_cookie","_this$state","push","bake_cookie","delete_cookie","_this2","Form","inline","FormControl","onChange","event","target","value","Button","onClick","submit","map","index","components_Note","key","clear","ReactDOM","render","components_App","document","getElementById"],"mappings":"8PAYeA,mLARP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAMC,KAAKC,cAJjBC,qBC0DJC,cApDX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAP,KAAAK,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAP,KAAAO,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAX,QAEKY,MAAQ,CACTT,KAAM,GACNU,MAAO,IALDP,mFAUVN,KAAKc,SAAS,CAAED,MAAOE,sBAbZ,4CAgBP,IAAAC,EACoBhB,KAAKY,MAArBC,EADJG,EACIH,MAAOV,EADXa,EACWb,KAEfU,EAAMI,KAAK,CAACd,SAEZH,KAAKc,SAAS,CAAED,UAEhBK,sBAvBW,QAuBalB,KAAKY,MAAMC,uCAInCM,wBA3BW,SA6BXnB,KAAKc,SAAS,CAACD,MAAO,sCAGlB,IAAAO,EAAApB,KACJ,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,QAAM,GACR1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAaC,SAAU,SAAAC,GAAK,OAAIL,EAAKN,SAAS,CAACX,KAAMsB,EAAMC,OAAOC,WACjE,IACD/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQC,QAAS,kBAAMT,EAAKU,WAA5B,WAGA9B,KAAKY,MAAMC,MAAMkB,IAAI,SAAC7B,EAAM8B,GACxB,OACIpC,EAAAC,EAAAC,cAACmC,EAAD,CAAOC,IAAKF,EAAO9B,KAAMA,MAIrCN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQC,QAAS,kBAAMT,EAAKe,UAA5B,uBA/CE/B,mBCFlBgC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.dd918476.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Note extends Component {\n    render(){\n        return(\n            <div className='note'>\n                <p>{this.props.note.text}</p>\n            </div>\n        )\n    }\n}\n\nexport default Note;","import React, { Component } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport Note from './Note';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\n\nconst cookie_key = 'NOTES';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            text: '',\n            notes: []\n        }\n    }\n\n    componentDidMount(){\n        this.setState({ notes: read_cookie(cookie_key) });\n    }\n\n    submit(){\n        const { notes, text } = this.state;\n\n        notes.push({text});\n\n        this.setState({ notes });\n\n        bake_cookie(cookie_key, this.state.notes);\n    }\n\n    clear(){\n        delete_cookie(cookie_key);\n\n        this.setState({notes: [] })\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Note to Self</h2>\n                <Form inline>\n                    <FormControl onChange={event => this.setState({text: event.target.value}) } />\n                    {' '}\n                    <Button onClick={() => this.submit()}>Submit</Button>\n                </Form>\n                {\n                    this.state.notes.map((note, index)=> {\n                        return (\n                            <Note  key={index} note={note} />\n                        )\n                    })\n                }\n                <hr />\n                <Button onClick={() => this.clear()}>Clear Notes</Button>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root') )"],"sourceRoot":""}